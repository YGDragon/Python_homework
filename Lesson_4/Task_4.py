"""
4. Задана натуральная степень k.
   Сформировать случайным образом список коэффициентов многочлена
   и записать в файл многочлен степени k.
   Коэффициенты должны быть случайными числами в диапазоне от 1 до 100
   Пример:
          - k=2 => 6*x^2 + 4*x + 5 = 0 или x^2 + 5 = 0 или 10*x^2 = 0

   Усложнение: Коэффициенты в полиноме могут быть нулевыми.

Примечание Создать три функции:
1) Функция формирования полинома. аргумент: степень полинома; возвращает полином.
   Коэффициенты вычисляются случайными.
   Полином удобно представить как словарь или как список коэффициентов. (на ваш выбор)
   В словаре степени будут ключами, в списке - индексами.
   Например k=3 => 6*x^3 + 4*x + 5. Словарь будет такой: {3:6, 2:0, 1:4, 0:5}. А список такой [5,4,0,6]

2) Функция формирование строки-полинома. Аргумент: полином (в вид словаря или списка).
Возвращает строку вида '6*x^3 + 4*x + 5'
Примечание: Обратите внимание на запись первой и нулевой степени, а также учет нулевого коэффициента.
Для формирования строки удобно использовать join

3) Функция записи строки-полинома в файл. Аргументы: имя файла и строка-полином.
"""
from random import randint


# функция формирования полинома
def cof_list(num):
    lst = [randint(0, 5) for _ in range(num + 1)]
    print(f'полином коэффициентов -> {lst}')
    return lst


# функция формирование строки-полинома
def new_str(cof):
    size = len(cof) - 1
    row = [f'{el}*x^{size - i}' for i, el in enumerate(cof) if el > 0 and i < size - 1]
    if cof[-2] == 1:
        row.append('x')
    elif 0 != cof[-2] != 1:
        row.append(f'{cof[-2]}*x')
    if cof[-1] > 0:
        row.append(f'{cof[-1]}')
    return " + ".join(row) + ' = 0'


# функция записи строки-полинома в файл
def wr_to_file(filename, polynom):
    with open(filename, mode="w", encoding="utf-8") as file:
        file.write(polynom)


wr_to_file("polynom.txt", new_str(cof_list(3)))
